/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestion.des.produit;

import Projet.ConnexionMysql;
import gestion.des.produit.dao.ConnectDB;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AmineGasa
 */
public class Ventes extends javax.swing.JFrame {

    /**
     * Creates new form ProduitForm
     */
    public Ventes() {
        initComponents();icon();
        combobox_client();
        combobox_produit();
        table_modifier();
    }
void icon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().
                getResource("Cartgrill_icon-icons.com_51191.png")));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerQuantite = new javax.swing.JSpinner();
        btnAjouter = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVente = new javax.swing.JTable();
        jTextFieldrechercher = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnVentes = new javax.swing.JLabel();
        jComboBox_produit = new javax.swing.JComboBox<>();
        jComboBox_client = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Ventes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldId.setEditable(false);
        jTextFieldId.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextFieldId.setForeground(new java.awt.Color(204, 0, 51));
        jPanel1.add(jTextFieldId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 210, 40));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel1.setText("ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel2.setText("Désignation du produit:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        jSpinnerQuantite.setFont(new java.awt.Font("Times New Roman", 0, 19)); // NOI18N
        jPanel1.add(jSpinnerQuantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 210, 40));

        btnAjouter.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnAjouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/ajouter.png"))); // NOI18N
        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });
        jPanel1.add(btnAjouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 131, -1));

        btnModifier.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnModifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/User-Files-icon.png"))); // NOI18N
        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });
        jPanel1.add(btnModifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 160, 40));

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/supprimer.png"))); // NOI18N
        jButton3.setText("Supprimer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 160, 40));

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/modifier.png"))); // NOI18N
        jButton5.setText("Actualiser");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, 40));

        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/viewmag--icone-5948-32.png"))); // NOI18N
        jButton6.setText("rechercher");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 162, 40));

        jTableVente.setBackground(new java.awt.Color(253, 245, 253));
        jTableVente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableVente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nom du client", "Désignation", "Quantité"
            }
        ));
        jTableVente.setToolTipText(""); // NOI18N
        jTableVente.setGridColor(new java.awt.Color(255, 0, 0));
        jTableVente.setRowMargin(2);
        jTableVente.setSelectionBackground(new java.awt.Color(0, 51, 255));
        jTableVente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVenteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableVenteMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVente);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 61, 480, 540));

        jTextFieldrechercher.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jTextFieldrechercher.setForeground(new java.awt.Color(0, 102, 255));
        jTextFieldrechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldrechercherActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldrechercher, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 120, 40));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel7.setText("Quantité:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));

        jLabel4.setFont(new java.awt.Font("PMingLiU", 1, 48)); // NOI18N
        jLabel4.setText("VENTES");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 240, 60));

        btnVentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/ecommerce-panier-shoping-webshop-icone-6530-128.png"))); // NOI18N
        btnVentes.setToolTipText("tout concerné avec les achates");
        btnVentes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVentesMouseClicked(evt);
            }
        });
        jPanel1.add(btnVentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 117));

        jComboBox_produit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox_produit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisir" }));
        jPanel1.add(jComboBox_produit, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 210, 40));

        jComboBox_client.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox_client.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisir" }));
        jPanel1.add(jComboBox_client, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 210, 40));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel3.setText("Nom du client:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 980, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    ConnectDB db;
    PreparedStatement insert;
    PreparedStatement search;
    PreparedStatement count;
    PreparedStatement combo;
    PreparedStatement reqCli;
    PreparedStatement reqcompare;
    
    private void table_modifier()
            {
        int c;
        try {
            Connection con = ConnexionMysql.getCon();
            insert = con.prepareStatement("SELECT v.N_vente AS idVente, c.nom_prenom AS nomClient, p.designation AS designation, v.qtesortie AS quantite FROM vente v JOIN client c ON v.N_client = c.N_client JOIN produit p ON v.N_prod = p.N_prod;");
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTableVente.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int a = 1; a < c; a++) {
                    v2.add(rs.getString("idVente"));
                    v2.add(rs.getString("nomClient"));
                    v2.add(rs.getString("designation"));
                    v2.add(rs.getString("quantite"));
                }

                Df.addRow(v2);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur!");
        }

    }
    
    private void combobox_client(){
//        
//        String combCli=jComboBox_client.getSelectedItem().toString();
//        String combProd = jComboBox_produit.getSelectedItem().toString();
            try {
                Connection con=ConnexionMysql.getCon();
                
            combo = con.prepareStatement("SELECT nom_prenom FROM client");
                ResultSet rs = combo.executeQuery();
                
            while (rs.next()) {
                String nomClient = rs.getString("nom_prenom");
                jComboBox_client.addItem(nomClient);
            }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    
    private void combobox_produit(){
//        
//        String combCli=jComboBox_client.getSelectedItem().toString();
//        String combProd = jComboBox_produit.getSelectedItem().toString();
            try {
                Connection con=ConnexionMysql.getCon();
                
            combo = con.prepareStatement("SELECT designation FROM produit");
                ResultSet rs = combo.executeQuery();
                
            while (rs.next()) {
                String designation = rs.getString("designation");
                jComboBox_produit.addItem(designation);
            }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated


    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
// TODO add your handling code here:
        String combo_client = jComboBox_client.getSelectedItem().toString();
        String combo_produit = jComboBox_produit.getSelectedItem().toString();
        int quantite = Integer.parseInt(jSpinnerQuantite.getValue().toString());
        try {
            if (combo_client.equals("Choisir") || combo_produit.equals("Choisir")) {
                JOptionPane.showMessageDialog(null, "Sélectionner le client et le produit !");
            } else {

                Connection con = ConnexionMysql.getCon();
                search = con.prepareStatement("SELECT N_prod FROM produit WHERE designation = '" + combo_produit + "'");
                ResultSet rs = search.executeQuery();
                if (rs.next()) {
                    int idProduit = rs.getInt("N_prod");

                    reqCli = con.prepareStatement("SELECT N_client FROM client WHERE nom_prenom = '" + combo_client + "'");
                    ResultSet rscli = reqCli.executeQuery();
                    if (rscli.next()) {
                        int idClient = rscli.getInt("N_client");

                        reqcompare = con.prepareStatement("SELECT qte_totale FROM produit WHERE N_prod = '" + idProduit + "'");
                        ResultSet rscomp = reqcompare.executeQuery();
                        if (rscomp.next()) {
                            int quant = rscomp.getInt("qte_totale");
                            if (quantite > quant) {
                                JOptionPane.showMessageDialog(null, "La valeur de la quantité entré est plus grand que la stock!");
                            } else {
                                insert = con.prepareStatement("INSERT INTO `vente` (`N_client`, `N_prod`, `qtesortie`) VALUES(?,?,?)");
                                insert.setInt(1, idClient);
                                insert.setInt(2, idProduit);
                                insert.setInt(3, quantite);
                                insert.executeUpdate();

                                JOptionPane.showMessageDialog(null, "Vente ajoutés avec succès!");
                                table_modifier();

                                jComboBox_client.setSelectedItem("Choisir");
                                jComboBox_produit.setSelectedItem("Choisir");
                                jSpinnerQuantite.setValue(0);
                                jSpinnerQuantite.requestFocus();
                                table_modifier();
                            }
                        }
                    }

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur!");
        }
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTableVente.getModel();
        int selectedIndex = jTableVente.getSelectedRow();
        String combo_client = jComboBox_client.getSelectedItem().toString();
        String combo_produit = jComboBox_produit.getSelectedItem().toString();
        int quantite = Integer.parseInt(jSpinnerQuantite.getValue().toString());
        try {
            int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
            if (combo_client.equals("Choisir") || combo_produit.equals("Choisir")) {
                JOptionPane.showMessageDialog(null, "Sélectionner le client et le produit !");
            } else {

                Connection con = ConnexionMysql.getCon();
                search = con.prepareStatement("SELECT N_prod FROM produit WHERE designation = '" + combo_produit + "'");
                ResultSet rs = search.executeQuery();
                if (rs.next()) {
                    int idProduit = rs.getInt("N_prod");

                    reqCli = con.prepareStatement("SELECT N_client FROM client WHERE nom_prenom = '" + combo_client + "'");
                    ResultSet rscli = reqCli.executeQuery();
                    if (rscli.next()) {
                        int idClient = rscli.getInt("N_client");

                        reqcompare = con.prepareStatement("SELECT qte_totale FROM produit WHERE N_prod = '" + idProduit + "'");
                        ResultSet rscomp = reqcompare.executeQuery();
                        if (rscomp.next()) {
                            int quant = rscomp.getInt("qte_totale");
                            if (quantite > quant) {
                                JOptionPane.showMessageDialog(null, "La valeur de la quantité entré est plus grand que la stock!");
                            } else {
                                insert = con.prepareStatement("UPDATE vente SET N_client = ?, N_prod= ?, qtesortie= ? WHERE N_vente=?");
                                insert.setInt(1, idClient);
                                insert.setInt(2, idProduit);
                                insert.setInt(3, quantite);
                                insert.setInt(4, id);
                                insert.executeUpdate();

                                JOptionPane.showMessageDialog(null, "Vente ajoutés avec succès!");
                                table_modifier();

                                jComboBox_client.setSelectedItem("Choisir");
                                jComboBox_produit.setSelectedItem("Choisir");
                                jSpinnerQuantite.setValue(0);
                                jSpinnerQuantite.requestFocus();
                                table_modifier();
                            }
                        }
                    }

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Veuillez vérifier la modification!");
        }        
    }//GEN-LAST:event_btnModifierActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTableVente.getModel();
        int selectedIndex = jTableVente.getSelectedRow();

        try {
            int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

            int dialogResult = JOptionPane.showConfirmDialog(null, "Voulez vous supprimés", "Warning", JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_NO_OPTION) {
                Connection con = ConnexionMysql.getCon();

                insert = con.prepareStatement("DELETE FROM vente WHERE N_vente=?");

                insert.setInt(1, id);
            }

            insert.executeUpdate();

            JOptionPane.showMessageDialog(null, "Vente supprimé!");
            table_modifier();

            jTextFieldId.setText("");
            jComboBox_client.setSelectedItem("Choisir");
            jComboBox_produit.setSelectedItem("Choisir");
            jSpinnerQuantite.setValue(0);
            jSpinnerQuantite.requestFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur de la suppression");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        table_modifier();
        jTextFieldId.setText("");
        jComboBox_client.setSelectedItem("Choisir");
        jComboBox_produit.setSelectedItem("Choisir");
        jSpinnerQuantite.setValue(0);
        jSpinnerQuantite.requestFocus();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTableVenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVenteMouseClicked

//        String combo_client = jComboBox_client.getSelectedItem().toString();
//        String combo_produit = jComboBox_produit.getSelectedItem().toString();
//        int quantite = Integer.parseInt(jSpinnerQuantite.getValue().toString());

        DefaultTableModel Df = (DefaultTableModel) jTableVente.getModel();
        int selectedIndex = jTableVente.getSelectedRow();
        
            jTextFieldId.setText(Df.getValueAt(selectedIndex, 0).toString());
            jComboBox_client.setSelectedItem(Df.getValueAt(selectedIndex, 1).toString());
            jComboBox_produit.setSelectedItem(Df.getValueAt(selectedIndex, 2).toString());
            jSpinnerQuantite.setValue(Integer.parseInt(Df.getValueAt(selectedIndex, 3).toString()));

//
//        String nomcli = Df.getValueAt(selectedIndex, 1).toString();
//        String desprod = Df.getValueAt(selectedIndex, 2).toString();
//
//        try {
//
//            Connection con = ConnexionMysql.getCon();
//            search = con.prepareStatement("SELECT designation FROM produit WHERE N_prod = '" + idpro + "'");
//            ResultSet rs = search.executeQuery();
//            if (rs.next()) {
//                String des = rs.getString("designation");
//
//                reqCli = con.prepareStatement("SELECT nom_prenom FROM client WHERE N_client = '" + idcli + "'");
//                ResultSet rscli = reqCli.executeQuery();
//                if (rscli.next()) {
//                    String nom = rscli.getString("nom_prenom");
//                    jTextFieldId.setText(Df.getValueAt(selectedIndex, 0).toString());
//                    jComboBox_client.addItem(nom);
//                    jComboBox_produit.addItem(des);
//                    jSpinnerQuantite.setValue(Integer.parseInt(Df.getValueAt(selectedIndex, 3).toString()));
//                }
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Erreur!");
//        }

    }//GEN-LAST:event_jTableVenteMouseClicked

    private void jTextFieldrechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldrechercherActionPerformed
        String rech = jTextFieldrechercher.getText();
        int c;
        try {
            Connection con = ConnexionMysql.getCon();
            insert = con.prepareStatement("SELECT v.N_vente AS idVente, c.nom_prenom AS nomClient, p.designation AS designation, v.qtesortie AS quantite FROM vente v JOIN client c ON v.N_client = c.N_client JOIN produit p ON v.N_prod = p.N_prod WHERE c.nom_prenom = '" + rech + "'");
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTableVente.getModel(); 
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int a = 1; a < c; a++) {
                    v2.add(rs.getString("idVente"));
                    v2.add(rs.getString("nomClient"));
                    v2.add(rs.getString("designation"));
                    v2.add(rs.getString("quantite"));
                }

                Df.addRow(v2);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur!");
        }

            // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldrechercherActionPerformed

    private void jTableVenteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVenteMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableVenteMouseEntered

    private void btnVentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVentesMouseClicked
        Ventes ventes = new Ventes();
        ventes.setVisible(true);
    }//GEN-LAST:event_btnVentesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnModifier;
    private javax.swing.JLabel btnVentes;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox_client;
    private javax.swing.JComboBox<String> jComboBox_produit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerQuantite;
    private javax.swing.JTable jTableVente;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldrechercher;
    // End of variables declaration//GEN-END:variables
}
